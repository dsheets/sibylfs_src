@type trace
# readlink test that checks that we are not allowed
# to make timestamps go back in time

Pid 1 -> mkdir /empty_dir_1/ 0o777
Tau
Pid 1 <- -

Pid 1 -> mkdir /empty_dir_2/ 0o777
Tau
Pid 1 <- -

Pid 1 -> mkdir /nonempty_dir_1/ 0o777
Tau
Pid 1 <- -

Pid 1 -> open_close /nonempty_dir_1/f1.txt [O_CREAT;O_RDWR] 0o666
Tau
Pid 1 <- -


# end of state setup

Pid 1 -> symlink /nonempty_dir_1/f1.txt /my_symlink
Tau
Pid 1 <- -

Pid 1 -> lstat /my_symlink
Tau
Pid 1 <- RV_stat {st_dev=2049;st_ino=1;st_kind=S_IFLNK;st_perm=0o777;st_nlink=1;st_uid=0;st_gid=0;st_rdev=0;st_size=22;st_atim={tv_sec=2;tv_nsec=0;}; st_mtim={ tv_sec=2;tv_nsec=0;};st_ctim={ tv_sec=2;tv_nsec=0;};}

Pid 1 -> stat /nonempty_dir_1/f1.txt
Tau
Pid 1 <- RV_stat {st_dev=2049;st_ino=1;st_kind=S_IFREG;st_perm=0o644;st_nlink=1;st_uid=0;st_gid=0;st_rdev=0;st_size=0;st_atim={tv_sec=1;tv_nsec=0;}; st_mtim={ tv_sec=1;tv_nsec=0;};st_ctim={ tv_sec=1;tv_nsec=0;};}


Pid 1 -> readlink /my_symlink
Tau
Pid 1 <- -

# readlink alters the st_atime timestamp of the symlink (see READLINK_TS in fs_spec/posix/readlink.md)

Pid 1 -> lstat /my_symlink
Tau
Pid 1 <- RV_stat {st_dev=2049;st_ino=1;st_kind=S_IFLNK;st_perm=0o777;st_nlink=1;st_uid=0;st_gid=0;st_rdev=0;st_size=22;st_atim={tv_sec=0;tv_nsec=0;}; st_mtim={ tv_sec=0;tv_nsec=0;};st_ctim={ tv_sec=0;tv_nsec=0;};}

Pid 1 -> lstat /my_symlink
Tau
Pid 1 <- RV_stat {st_dev=2049;st_ino=1;st_kind=S_IFLNK;st_perm=0o777;st_nlink=1;st_uid=0;st_gid=0;st_rdev=0;st_size=22;st_atim={tv_sec=2;tv_nsec=0;}; st_mtim={ tv_sec=2;tv_nsec=0;};st_ctim={ tv_sec=2;tv_nsec=0;};}
